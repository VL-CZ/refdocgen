@using RefDocGen.TemplateGenerators.Default.TemplateModels.Types
@inherits ComponentBase

@code {
    [Parameter]
    public required ObjectTypeTM Model { get; set; }

    /// <summary>
    /// Checks if the model has any (summary, remarks,...) doc comments.
    /// </summary>
    /// <returns>Boolean indicating whether the model is documented.</returns>
    private bool IsModelDocumented()
    {
        return Model.SummaryDocComment is not null || Model.RemarksDocComment is not null || Model.SeeAlsoDocComments.Any() || Model.TypeParameters.Any();
    }
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@Model.Name</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">


    <!-- Custom CSS, TODO: move to separate file -->
    <style>
        .display-1 {
            font-size: 4rem;
        }

        .display-2 {
            font-size: 3.5rem;
        }

        .display-3 {
            font-size: 3rem;
        }

        .display-4 {
            font-size: 2.5rem;
        }

        .display-5 {
            font-size: 2rem;
        }

        .display-6 {
            font-size: 1.5rem;
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg sticky-top bg-dark" data-bs-theme="dark">
        <div class="container">
            <a class="navbar-brand" href="#">Project name</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <!-- <a class="nav-link active" aria-current="page" href="#">Home</a> -->
                    <a class="nav-link" href="./index.html">Home</a>
                </div>
            </div>
        </div>
    </nav>

    <div class="container my-4">

        <DeclaredTypeName TypeName="@Model.Name" TypeKindName="@Model.TypeKindName" Modifiers="@Model.Modifiers" TypeParameters="@Model.TypeParameters" />

        <TypeParametersConstraints TypeParameters="@Model.TypeParameters" />

        <NamespaceLink Namespace="@Model.Namespace" />

        <!-- Base type name -->
        @if (Model.BaseType is not null)
        {
            <div>
                <i>Base type:</i>
                <samp class="text-secondary">
                    <TypeLink Type="@Model.BaseType" />
                </samp>
            </div>
        }

        <!-- Implemented interfaces -->
        @if (Model.ImplementedInterfaces.Any())
        {
            <div>
                <i>Implements:</i>
                <samp class="text-secondary">
                    @foreach (var iface in Model.ImplementedInterfaces)
                    {
                        <TypeLink Type="@iface" />

                        @if (iface != Model.ImplementedInterfaces.Last())
                        {
                            <span>, </span>
                        }
                    }
                </samp>
            </div>
        }

        <hr />

        <!-- Doc comments -->
        <SummaryDocumentation DocComment="@Model.SummaryDocComment" />

        <!-- Type parameter doc comments -->
        <TypeParameterDocs TypeParameters="@Model.TypeParameters" />

        <!-- Remarks doc comment -->
        <RemarksDocumentation DocComment="@Model.RemarksDocComment" />

        <SeeAlsoDocumentation DocComments="@Model.SeeAlsoDocComments" />

        @if (IsModelDocumented())
        {
            <hr />
        }

        @if (Model.Constructors.Any())
        {
            <ConstructorsSection Constructors="@Model.Constructors" TypeName="@Model.Name" />
        }

        @if (Model.Fields.Any())
        {
            <FieldsSection Fields="@Model.Fields" />
        }

        @if (Model.Events.Any())
        {
            <EventsSection Events="@Model.Events" />
        }

        @if (Model.Properties.Any())
        {
            <PropertiesSection Properties="@Model.Properties" />
        }

        @if (Model.Indexers.Any())
        {
            <IndexersSection Indexers="@Model.Indexers" />
        }

        @if (Model.Methods.Any())
        {
            <MethodsSection Methods="@Model.Methods" SectionName="Methods" />
        }

        @if (Model.Operators.Any())
        {
            <MethodsSection Methods="@Model.Operators" SectionName="Operators" />
        }

    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
