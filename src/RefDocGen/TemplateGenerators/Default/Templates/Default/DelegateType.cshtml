@model RefDocGen.TemplateGenerators.Default.TemplateModels.Types.DelegateTypeTM

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>
        @Model.Name
    </title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">


    <!-- Custom CSS, TODO: move to separate file -->
    <style>
        .display-1 {
            font-size: 4rem;
        }

        .display-2 {
            font-size: 3.5rem;
        }

        .display-3 {
            font-size: 3rem;
        }

        .display-4 {
            font-size: 2.5rem;
        }

        .display-5 {
            font-size: 2rem;
        }

        .display-6 {
            font-size: 1.5rem;
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg sticky-top bg-dark" data-bs-theme="dark">
        <div class="container">
            <a class="navbar-brand" href="#">Project name</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <!-- <a class="nav-link active" aria-current="page" href="#">Home</a> -->
                    <a class="nav-link" href="./index.html">Home</a>
                </div>
            </div>
        </div>
    </nav>

    <div class="container my-4">
        <h1 class="display-4">
            <samp>
                <span class="text-primary">@string.Join(' ', Model.Modifiers) delegate</span>
                <span class="text-dark">@Model.Name</span>
            </samp>
        </h1>

        @{
            var namespaceUrl = $"{Model.Namespace}.html";
        }

        <h6>
            <samp>
                <a href="@namespaceUrl" class="link-secondary link-offset-2 link-underline-opacity-0 link-underline-opacity-75-hover">
                    <span class="text-primary">namespace</span>
                    <span class="text-secondary">@Model.Namespace</span>
                </a>
            </samp>
        </h6>

        <hr />

        <p class="text-muted">
            <i>@Model.DocComment</i>

            @if (Model.TypeParameters.Any())
            {
                <!-- <h3 class="lead my-2">Type parameters</h3> -->

                <div class="mx-3">
                    @foreach (var typeParam in Model.TypeParameters)
                    {
                        if (!string.IsNullOrEmpty(typeParam.DocComment))
                        {
                            <samp>
                                <span class="text-primary">
                                    @string.Join(' ', typeParam.Modifiers)
                                </span>
                                <span class="text-dark">
                                    @typeParam.Name
                                </span>
                            </samp>
                            <p class="text-muted">
                                <i>@typeParam.DocComment</i>
                            </p>
                        }
                    }
                </div>
            }
        </p>

        <hr />

        <div class="row">
            <div class="col-md-12">
                <div class="border p-2 mb-2">
                    <h6 class="mb-1">
                        <samp>
                            <span class="text-primary">
                                @string.Join(' ', Model.Modifiers) delegate
                            </span>
                            <span class="text-secondary">
                                @Model.ReturnType
                            </span>
                            <span class="text-secondary">
                                @if (Model.Parameters.Any())
                                {
                                    var lastParam = Model.Parameters.Last();

                                    <span class="text-dark">
                                        @Model.Name<span class="text-secondary">(</span>
                                    </span>

                                    @foreach (var p in Model.Parameters)
                                    {
                                        <span class="text-primary">
                                            @string.Join(' ', p.Modifiers)
                                        </span>
                                        <span class="text-secondary">
                                            @p.Type
                                        </span>

                                        @if (p == lastParam)
                                        {
                                            <span class="text-dark">
                                                @p.Name<span class="text-secondary">)</span>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-dark">
                                                @($"{p.Name},")
                                            </span>
                                        }
                                    }
                                }
                                else
                                {
                                    <span class="text-dark">@Model.Name<span class="text-secondary">()</span></span>
                                }
                            </span>
                        </samp>

                    </h6>
                    <p class="text-muted mb-0">
                        <i>@Model.DocComment</i>
                    </p>

                    @if (Model.Parameters.Any())
                    {
                        <div class="m-2">
                            @foreach (var parameter in Model.Parameters)
                            {
                                <samp>
                                    <span class="text-primary">
                                        @string.Join(' ', parameter.Modifiers)
                                    </span>
                                    <span class="text-secondary">
                                        @parameter.Type
                                    </span>
                                    <span class="text-dark">
                                        @parameter.Name
                                    </span>
                                </samp>
                                <p class="text-muted">
                                    <i>@parameter.DocComment</i>
                                </p>
                            }
                        </div>
                    }

                    @if (!Model.ReturnsVoid)
                    {

                        <div class="m-2">
                            Returns
                            <samp>
                                <span class="text-secondary">
                                    @Model.ReturnType
                                </span>
                            </samp>
                            <p class="text-muted">
                                <i>@Model.ReturnsDocComment</i>
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
