@inherits ComponentBase

@code {
    [Parameter]
    public required TypeParameterTM[] TypeParameters { get; set; }
}

@foreach (var tp in TypeParameters)
{
    var allConstraints = tp.SpecialConstraints.Concat(
        tp.TypeConstraints.Select(c => c.Name)
    );

    if (allConstraints.Any())
    {
        <h6 class="mx-3" data-id="type-param-constraints">
            <samp>
                <span class="text-primary">where</span>
                <span class="text-secondary">@tp.Name : </span>
                <span class="text-primary">@string.Join(", ", tp.SpecialConstraints)</span>

                @if (tp.TypeConstraints.Any())
                {
                    var lastItem = tp.TypeConstraints.Last();

                    @if (tp.SpecialConstraints.Any())
                    {
                        <span class="text-primary">, </span>
                    }

                    foreach (var constraint in tp.TypeConstraints)
                    {
                        <TypeLink Type="@constraint" />

                        if (constraint != lastItem)
                        {
                            <text>, </text>
                        }
                    }
                }
            </samp>
        </h6>
    }
}

@if (TypeParameters.Any())
{
    <div class="my-3" />
}
