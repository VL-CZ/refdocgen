@using RefDocGen.TemplateGenerators.Default.TemplateModels.Types
@inherits ComponentBase

@code {
    [Parameter]
    public required IEnumerable<AttributeTM> Attributes { get; set; }
}

@if (Attributes.Any())
{
    <h3 class="lead mt-3">Attributes</h3>
    <div class="mx-2">
        @foreach (var attr in Attributes)
        {
            <div>
                <samp>
                    <TypeLink Type="@attr.Type" />

                    @if (attr.ConstructorArguments.Any() || attr.NamedArguments.Any())
                    {
                        <span class="text-secondary">(</span>
                        @foreach (var ctorArg in attr.ConstructorArguments)
                        {
                            <span class="text-success">@ctorArg</span>
                            @if (ctorArg != attr.ConstructorArguments.Last())
                            {
                                <span class="text-secondary">, </span>
                            }
                        }

                        @if (attr.ConstructorArguments.Any() && attr.NamedArguments.Any())
                        {
                            <span class="text-secondary">, </span>
                        }

                        @foreach (var namedArg in attr.NamedArguments)
                        {
                            <TypeLink Type="@namedArg.Name" />
                            <LiteralValueSuffix Value="@namedArg.Value" />
                        }
                        <span class="text-secondary">)</span>
                    }
                </samp>
            </div>
        }
    </div>
}
