@using RefDocGen.TemplateGenerators.Shared.TemplateModels.Language
@inherits ComponentBase

@code {
    [Parameter]
    public required IEnumerable<TypeNameTM> NestedTypes { get; set; }

    [CascadingParameter]
    public required LanguageTM[] Languages { get; set; }
}

@if (NestedTypes.Any())
{
    <h3 class="lead mt-3">Nested types</h3>
    <div class="mx-2" data-id="nested-types-section">
        @foreach (var nestedType in NestedTypes)
        {
            var nestedTypeUrl = $"./{nestedType.Id}.html";

            <div data-id="nested-type-data">
                <samp data-id="nested-type-name">
                    <a href="@nestedTypeUrl" class="refdocgen-link-secondary">
                        <span class="refdocgen-text-tertiary">
                            @nestedType.TypeKindName
                        </span>
                        <span> </span>

                        @foreach (var language in Languages)
                        {
                            <span class="@language.Id">
                                @nestedType.Name[language.Id]
                            </span>
                        }
                    </a>
                </samp>
                <div class="text-body-secondary mb-2" data-id="summary-doc">
                    @if (nestedType.DocComment is not null)
                    {
                        <i>@((MarkupString)nestedType.DocComment)</i>
                    }
                </div>
            </div>
        }
    </div>
}
