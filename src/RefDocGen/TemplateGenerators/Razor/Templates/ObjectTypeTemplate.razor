@using RefDocGen.TemplateGenerators.Default.TemplateModels.Types
@inherits ComponentBase

@code {
    [Parameter]
    public required ObjectTypeTM Model { get; set; }
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>
        @Model.Name
    </title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">


    <!-- Custom CSS, TODO: move to separate file -->
    <style>
        .display-1 {
            font-size: 4rem;
        }

        .display-2 {
            font-size: 3.5rem;
        }

        .display-3 {
            font-size: 3rem;
        }

        .display-4 {
            font-size: 2.5rem;
        }

        .display-5 {
            font-size: 2rem;
        }

        .display-6 {
            font-size: 1.5rem;
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg sticky-top bg-dark" data-bs-theme="dark">
        <div class="container">
            <a class="navbar-brand" href="#">Project name</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav">
                    <!-- <a class="nav-link active" aria-current="page" href="#">Home</a> -->
                    <a class="nav-link" href="./index.html">Home</a>
                </div>
            </div>
        </div>
    </nav>

    <div class="container my-4">

        <DeclaredTypeName TypeName="@Model.Name" TypeKindName="@Model.TypeKindName" Modifiers="@Model.Modifiers" />

        <TypeParametersConstraints TypeParameters="@Model.TypeParameters" />

        <NamespaceLink Namespace="@Model.Namespace" />

        <!-- Base type name -->
        @if (Model.BaseTypeName is not null)
        {
            <div>
                <i>Base type:</i>
                <samp class="text-secondary">
                    @Model.BaseTypeName
                </samp>
            </div>
        }

        <!-- Implemented interfaces -->
        @if (Model.ImplementedInterfaces.Any())
        {
            <div>
                <i>Implements:</i>
                <samp class="text-secondary">
                    @string.Join(", ", Model.ImplementedInterfaces)
                </samp>
            </div>
        }

        <hr />

        <!-- Doc comments -->
        <div class="text-muted">

            <!-- Summary doc comment -->
            <i>
                @((MarkupString)Model.SummaryDocComment)
            </i>

            <!-- Type parameter doc comments -->
            <TypeParameterDocs TypeParameters="@Model.TypeParameters" />

            <!-- Remarks doc comment -->
            <RemarksDocumentation DocComment="@Model.RemarksDocComment" />

        </div>

        <hr />

        @if (Model.Constructors.Any())
        {
            <h2 class="display-5 mt-2">Constructors</h2>
            <div class="row">
                <div class="col-md-12">
                    @foreach (var constructor in Model.Constructors)
                    {
                        <div class="border p-2 mb-2">
                            <h6 class="mb-1">
                                <samp>
                                    <span class="text-primary">
                                        @string.Join(' ', constructor.Modifiers)
                                    </span>
                                    <span class="text-secondary">
                                        @if (constructor.Parameters.Any())
                                        {
                                            var lastParam = constructor.Parameters.Last();

                                            <span class="text-dark">
                                                @Model.Name<span class="text-secondary">(</span>
                                            </span>

                                            @foreach (var p in constructor.Parameters)
                                            {
                                                <span class="text-secondary">
                                                    @p.Type
                                                </span>

                                                @if (p == lastParam)
                                                {
                                                    <span class="text-dark">
                                                        @p.Name<span class="text-secondary">)</span>
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-dark">
                                                        @($"{p.Name},")
                                                    </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-dark">@Model.Name<span class="text-secondary">()</span></span>
                                        }
                                    </span>
                                </samp>

                            </h6>
                            <div class="text-muted mb-0">
                                <i>
                                    @((MarkupString)constructor.SummaryDocComment)
                                </i>
                            </div>

                            @if (constructor.Parameters.Any())
                            {
                                <h3 class="lead my-2">Parameters</h3>
                                <div class="mx-2">
                                    @foreach (var parameter in constructor.Parameters)
                                    {
                                        <samp>
                                            <span class="text-primary">
                                                @string.Join(' ', parameter.Modifiers)
                                            </span>
                                            <span class="text-secondary">
                                                @parameter.Type
                                            </span>
                                            <span class="text-dark">
                                                @parameter.Name
                                            </span>
                                        </samp>
                                        <p class="text-muted">
                                            <i>@parameter.DocComment</i>
                                        </p>
                                    }
                                </div>
                            }

                            <!-- Remarks doc comment -->
                            <RemarksDocumentation DocComment="@constructor.RemarksDocComment" />

                            <ExceptionsDocumentation Exceptions="@constructor.Exceptions" />
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Fields.Any())
        {
            <h2 class="display-5 mt-2">Fields</h2>
            <div class="row">
                <div class="col-md-12">
                    @foreach (var field in Model.Fields)
                    {
                        <div class="border p-2 mb-2" id="@field.Name">
                            <h6 class="mb-1">
                                <samp>
                                    <span class="text-primary">
                                        @string.Join(' ', field.Modifiers)
                                    </span>
                                    <span class="text-secondary">
                                        @field.Type
                                    </span>
                                    <span class="text-dark">
                                        @field.Name
                                    </span>

                                    @if (field.ConstantValue is not null)
                                    {
                                        <span class="text-secondary">=</span>
                                        <span class="text-success">@field.ConstantValue</span>
                                    }

                                </samp>
                            </h6>
                            <div class="text-muted mb-0">
                                <i>
                                    @((MarkupString)field.SummaryDocComment)
                                </i>
                            </div>

                            <RemarksDocumentation DocComment="@field.RemarksDocComment" />

                            @if (field.SeeAlsoDocComments.Any())
                            {
                                <div class="mt-3">
                                    <div class="lead">See also</div>
                                    @foreach (var comment in field.SeeAlsoDocComments)
                                    {
                                        <div>
                                            @((MarkupString)comment)
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Properties.Any())
        {
            <h2 class="display-5 mt-2">Properties</h2>
            <div class="row">
                <div class="col-md-12">
                    @foreach (var property in Model.Properties)
                    {
                        <div class="border p-2 mb-2">
                            <h6 class="mb-1">
                                <samp>
                                    <span class="text-primary">
                                        @string.Join(' ', property.Modifiers)
                                    </span>
                                    <span class="text-secondary">
                                        @property.Type
                                    </span>
                                    <span class="text-dark">
                                        @property.Name
                                    </span>

                                    <span class="text-secondary">{ </span>

                                    @{
                                        var getterWithModifiers = property.HasGetter ? $"{string.Join(' ', property.GetterModifiers)} get" : string.Empty;
                                        var setterWithModifiers = property.HasSetter ? $"{string.Join(' ', property.SetterModifiers)} set" : string.Empty;
                                    }

                                    @if (property.HasGetter)
                                    {
                                        <span class="text-primary">
                                            @getterWithModifiers<span class="text-secondary">;</span>
                                        </span>
                                    }
                                    @if (property.HasSetter)
                                    {
                                        <span class="text-primary">
                                            @setterWithModifiers<span class="text-secondary">;</span>
                                        </span>
                                    }

                                    <span class="text-secondary">}</span>

                                    @if (property.ConstantValue is not null)
                                    {
                                        <span class="text-secondary">=</span>
                                        <span class="text-success">@property.ConstantValue</span>
                                    }
                                </samp>
                            </h6>
                            <p class="text-muted mb-0">
                                <i>@property.SummaryDocComment</i>
                            </p>

                            <ValueDocumentation DocComment="@property.ValueDocComment" />

                            <!-- Remarks doc comment -->
                            <RemarksDocumentation DocComment="@property.RemarksDocComment" />

                            <ExceptionsDocumentation Exceptions="@property.Exceptions" />
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Indexers.Any())
        {
            <h2 class="display-5 mt-2">Indexers</h2>
            <div class="row">
                <div class="col-md-12">
                    @foreach (var indexer in Model.Indexers)
                    {
                        <div class="border p-2 mb-2">
                            <h6 class="mb-1">
                                <samp>
                                    <span class="text-primary">
                                        @string.Join(' ', indexer.Modifiers)
                                    </span>
                                    <span class="text-secondary">
                                        @indexer.Type
                                    </span>

                                    @if (indexer.Parameters.Any())
                                    {
                                        var lastParam = indexer.Parameters.Last();

                                        <span class="text-dark">
                                            this<span class="text-secondary">[</span>
                                        </span>

                                        @foreach (var p in indexer.Parameters)
                                        {
                                            <span class="text-primary">
                                                @string.Join(' ', p.Modifiers)
                                            </span>
                                            <span class="text-secondary">
                                                @p.Type
                                            </span>

                                            @if (p == lastParam)
                                            {
                                                <span class="text-dark">
                                                    @p.Name<span class="text-secondary">]</span>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-dark">
                                                    @($"{p.Name},")
                                                </span>
                                            }
                                        }
                                    }

                                    <span class="text-secondary">{ </span>

                                    @{
                                        var getterWithModifiers = indexer.HasGetter ? $"{string.Join(' ', indexer.GetterModifiers)} get" : string.Empty;
                                        var setterWithModifiers = indexer.HasSetter ? $"{string.Join(' ', indexer.SetterModifiers)} set" : string.Empty;
                                    }

                                    @if (indexer.HasGetter)
                                    {
                                        <span class="text-primary">
                                            @getterWithModifiers<span class="text-secondary">;</span>
                                        </span>
                                    }
                                    @if (indexer.HasSetter)
                                    {
                                        <span class="text-primary">
                                            @setterWithModifiers<span class="text-secondary">;</span>
                                        </span>
                                    }

                                    <span class="text-secondary">}</span>
                                </samp>
                            </h6>
                            <p class="text-muted mb-0">
                                <i>@indexer.SummaryDocComment</i>
                            </p>

                            @if (indexer.Parameters.Any())
                            {
                                <div class="m-3">
                                    @foreach (var parameter in indexer.Parameters)
                                    {
                                        <samp>
                                            <span class="text-primary">
                                                @string.Join(' ', parameter.Modifiers)
                                            </span>
                                            <span class="text-secondary">
                                                @parameter.Type
                                            </span>
                                            <span class="text-dark">
                                                @parameter.Name
                                            </span>
                                        </samp>
                                        <p class="text-muted">
                                            <i>@parameter.DocComment</i>
                                        </p>
                                    }
                                </div>
                            }

                            <ValueDocumentation DocComment="@indexer.ValueDocComment" />

                            <!-- Remarks doc comment -->
                            <RemarksDocumentation DocComment="@indexer.RemarksDocComment" />

                            <ExceptionsDocumentation Exceptions="@indexer.Exceptions" />
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Methods.Any())
        {
            <h2 class="display-5 mt-2">Methods</h2>
            <div class="row">
                <div class="col-md-12">

                    @foreach (var method in Model.Methods)
                    {
                        <div class="border p-2 mb-2">
                            <h6 class="mb-1">
                                <samp>
                                    <span class="text-primary">
                                        @string.Join(' ', method.Modifiers)
                                    </span>
                                    <span class="text-secondary">
                                        @method.ReturnType
                                    </span>
                                    <span class="text-secondary">
                                        @if (method.Parameters.Any())
                                        {
                                            var lastParam = method.Parameters.Last();

                                            <span class="text-dark">
                                                @method.Name<span class="text-secondary">(</span>
                                            </span>

                                            @foreach (var p in method.Parameters)
                                            {
                                                <span class="text-primary">
                                                    @string.Join(' ', p.Modifiers)
                                                </span>
                                                <span class="text-secondary">
                                                    @p.Type
                                                </span>

                                                @if (p == lastParam)
                                                {
                                                    if (p.DefaultValue is not null)
                                                    {
                                                        <span class="text-dark">
                                                            @p.Name
                                                            <span class="text-secondary">=</span>
                                                            <span class="text-success">@p.DefaultValue</span>
                                                            <span class="text-secondary">)</span>
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-dark">
                                                            @p.Name<span class="text-secondary">)</span>
                                                        </span>
                                                    }
                                                }
                                                else
                                                {
                                                    if (p.DefaultValue is not null)
                                                    {
                                                        <span class="text-dark">
                                                            @p.Name
                                                            <span class="text-secondary">=</span>
                                                            <span class="text-success">@p.DefaultValue</span>
                                                            ,
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-dark">
                                                            @p.Name,
                                                        </span>
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-dark">@method.Name<span class="text-secondary">()</span></span>
                                        }

                                        @* TODO: move up *@
                                        @if (method.TypeParameters.Any())
                                        {
                                            var paramsString = string.Join(',', method.TypeParameters.Select(tp => tp.Name));

                                            <span class="text-secondary">&lt;</span>

                                            <span class="text-dark">@paramsString</span>

                                            <span class="text-secondary">&gt;</span>
                                        }
                                    </span>
                                </samp>

                            </h6>
                            <p class="text-muted mb-0">
                                <i>@method.SummaryDocComment</i>
                            </p>

                            @if (method.Parameters.Any())
                            {
                                <h3 class="lead my-2">Parameters</h3>
                                <div class="mx-2">
                                    @foreach (var parameter in method.Parameters)
                                    {
                                        <samp>
                                            <span class="text-primary">
                                                @string.Join(' ', parameter.Modifiers)
                                            </span>
                                            <span class="text-secondary">
                                                @parameter.Type
                                            </span>
                                            <span class="text-dark">
                                                @parameter.Name
                                            </span>
                                        </samp>
                                        <p class="text-muted">
                                            <i>@parameter.DocComment</i>
                                        </p>
                                    }
                                </div>
                            }

                            @if (!method.ReturnsVoid)
                            {
                                <h3 class="lead my-2">Returns</h3>
                                <div class="mx-2">

                                    <samp>
                                        <span class="text-secondary">
                                            @method.ReturnType
                                        </span>
                                    </samp>
                                    <p class="text-muted">
                                        <i>@method.ReturnsDocComment</i>
                                    </p>
                                </div>
                            }

                            <!-- Remarks doc comment -->
                            <RemarksDocumentation DocComment="@method.RemarksDocComment" />

                            <ExceptionsDocumentation Exceptions="@method.Exceptions" />
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Operators.Any())
        {
            <h2 class="display-5 mt-2">Operators</h2>
            <div class="row">
                <div class="col-md-12">

                    @foreach (var method in Model.Operators)
                    {
                        <div class="border p-2 mb-2">
                            <h6 class="mb-1">
                                <samp>
                                    <span class="text-primary">
                                        @string.Join(' ', method.Modifiers)
                                    </span>
                                    <span class="text-secondary">
                                        @method.ReturnType
                                    </span>
                                    <span class="text-secondary">
                                        @if (method.Parameters.Any())
                                        {
                                            var lastParam = method.Parameters.Last();

                                            <span class="text-dark">
                                                @method.Name<span class="text-secondary">(</span>
                                            </span>

                                            @foreach (var p in method.Parameters)
                                            {
                                                <span class="text-primary">
                                                    @string.Join(' ', p.Modifiers)
                                                </span>
                                                <span class="text-secondary">
                                                    @p.Type
                                                </span>

                                                @if (p == lastParam)
                                                {
                                                    <span class="text-dark">
                                                        @p.Name<span class="text-secondary">)</span>
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-dark">
                                                        @($"{p.Name},")
                                                    </span>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-dark">@method.Name<span class="text-secondary">()</span></span>
                                        }
                                    </span>
                                </samp>

                            </h6>
                            <p class="text-muted mb-0">
                                <i>@method.SummaryDocComment</i>
                            </p>

                            @if (method.Parameters.Any())
                            {
                                <h3 class="lead my-2">Parameters</h3>
                                <div class="mx-2">
                                    @foreach (var parameter in method.Parameters)
                                    {
                                        <samp>
                                            <span class="text-primary">
                                                @string.Join(' ', parameter.Modifiers)
                                            </span>
                                            <span class="text-secondary">
                                                @parameter.Type
                                            </span>
                                            <span class="text-dark">
                                                @parameter.Name
                                            </span>
                                        </samp>
                                        <p class="text-muted">
                                            <i>@parameter.DocComment</i>
                                        </p>
                                    }
                                </div>
                            }

                            @if (!method.ReturnsVoid)
                            {
                                <h3 class="lead my-2">Returns</h3>
                                <div class="mx-2">

                                    <samp>
                                        <span class="text-secondary">
                                            @method.ReturnType
                                        </span>
                                    </samp>
                                    <p class="text-muted">
                                        <i>@method.ReturnsDocComment</i>
                                    </p>
                                </div>
                            }

                            <!-- Remarks doc comment -->
                            <RemarksDocumentation DocComment="@method.RemarksDocComment" />

                            <ExceptionsDocumentation Exceptions="@method.Exceptions" />
                        </div>
                    }
                </div>
            </div>
        }

    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
