@using RefDocGen.TemplateProcessors.Shared.TemplateModels.Members
@inherits ComponentBase

@code {
    [Parameter]
    public required MethodTM[] Methods { get; set; }

    /// <summary>
    /// Checks whether the method has any documentation section ('summary', 'remarks', etc.)
    /// </summary>
    private bool HasAnyDocSection(MethodTM method)
    {
        return Checks.AnyNotNull(method.SummaryDocComment, method.ReturnsDocComment, method.RemarksDocComment, method.ExampleDocComment,
                method.InheritedFrom, method.BaseDeclaringType, method.ExplicitInterfaceType)
            || Checks.AnyNonEmpty(method.TypeParameters, method.Parameters, method.Attributes, method.Exceptions, method.SeeAlsoDocComments,
                method.ImplementedInterfaces)
            || !method.ReturnsVoid;
    }
}

<h2 class="display-5 mt-2">Methods</h2>
<div class="row" data-id="methods-section">
    <div class="col-md-12">
        @foreach (var (index, method) in Methods.Enumerate())
        {
            string collapseId = $"method-{index}-collapse";

            <div class="border px-2 py-1 mb-2" id="@method.Id" data-id="member-data">

                <div class="d-flex justify-content-between align-items-center">
                    <h6 class="mb-0 text-break" data-id="member-declaration">
                        <samp>
                            <MethodDeclaration Method="@method" />

                            <AnchorLink Id="@method.Id" />
                        </samp>
                    </h6>

                    <CollapseButton CollapseTarget="@collapseId" IsVisible="@HasAnyDocSection(method)" />
                </div>

                <div class="collapse show multi-collapse" id="@collapseId">

                    <TypeParametersConstraintsSection TypeParameters="@method.TypeParameters" />

                    <MemberInheritedFrom OriginalType="@method.InheritedFrom" />

                    <MemberOverrides BaseType="@method.BaseDeclaringType" />

                    <MemberExplicitlyImplements Interface="@method.ExplicitInterfaceType" />

                    <MemberImplements Interfaces="@method.ImplementedInterfaces" />

                    <SummaryDoc DocComment="@method.SummaryDocComment" />

                    <TypeParameterDocs TypeParameters="@method.TypeParameters" />

                    <ParameterDocs Parameters="@method.Parameters" />

                    @if (!method.ReturnsVoid)
                    {
                        <ReturnValueDoc DocComment="@method.ReturnsDocComment" Type="@method.ReturnType" />
                    }

                    <AttributesSection Attributes="@method.Attributes" />

                    <!-- Remarks doc comment -->
                    <RemarksDoc DocComment="@method.RemarksDocComment" />

                    <ExampleDoc DocComment="@method.ExampleDocComment" />

                    <ExceptionDocs Exceptions="@method.Exceptions" />

                    <SeeAlsoDocs DocComments="@method.SeeAlsoDocComments" />

                    <div class="mt-1" />
                </div>
            </div>
        }
    </div>
</div>
