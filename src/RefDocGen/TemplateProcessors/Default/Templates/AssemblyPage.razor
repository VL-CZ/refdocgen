@using RefDocGen.TemplateProcessors.Shared.TemplateModels.Assemblies
@using RefDocGen.TemplateProcessors.Shared.TemplateModels.Language
@using RefDocGen.TemplateProcessors.Shared.TemplateModels.Menu
@inherits ComponentBase

@code {
    [Parameter]
    public required AssemblyTM Model { get; set; }

    [Parameter]
    public required TopMenuDataTM TopMenuData { get; set; }

    [Parameter]
    public required string[]? Versions { get; set; }

    [Parameter]
    public required LanguageTM[] Languages { get; set; }
}

<CascadingValue Value="TopMenuData">
    <CascadingValue Value="Versions">
        <CascadingValue Value="Languages">
            <LayoutView Layout="typeof(AppLayout)">

                <div class="d-flex justify-content-between align-items-center">
                    <h1 class="display-4 text-break">
                        <samp>
                            <span class="refdocgen-text-tertiary">assembly</span>
                            <span class="refdocgen-text-primary">@((MarkupString)Model.Name.WithWbrAfterDots())</span>
                        </samp>
                    </h1>

                    <!-- chevron icon, taken from https://icons.getbootstrap.com/icons/chevron-down/ -->
                    <button class="btn" id="toggleAllBtn">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708" />
                        </svg>
                    </button>
                </div>

                <hr class="mb-2" />

                @foreach (var ns in Model.Namespaces)
                {
                    <NamespaceTypeList Namespace="@ns" />
                }
            </LayoutView>
        </CascadingValue>
    </CascadingValue>
</CascadingValue>

<script>
    const toggleBtn = document.getElementById('toggleAllBtn');
    const namespaces = Array.from(document.getElementsByClassName('multi-collapse'));

    toggleBtn.addEventListener('click', () => {
      const allShown = namespaces.every(ns => ns.classList.contains('show'));

      namespaces.forEach(el => {
        const instance = bootstrap.Collapse.getOrCreateInstance(el);
        if (allShown) {
          instance.hide(); // Collapse if all were shown
        } else {
          instance.show(); // Otherwise expand all
        }
      });
    });
</script>
